<ActivityStreamModel description="" name="FeedViews" timezone="Asia/Krasnoyarsk" daylight="false" live="true">
  <ModelInfo validated="true">
    <Source>
      <DataSource type="FeedSource">
        <property constraints="feed" label="Feed Name" type="string" name="feedName" value="/prj/home/vtbaadmin/FeedSourceTarget$Deployment/FeedSource"/>
        <property enums="SUBSCRIBE_ONLY=Subscribe,REPLAY_EVENT_ARCHIVE_AND_SUBSCRIBE=Replay_Subscribe" label="Subscriber Mode" type="string" value="SUBSCRIBE_ONLY" name="subscriberMode"/>
        <property contorlValue="REPLAY_EVENT_ARCHIVE_AND_SUBSCRIBE" controlName="subscriberMode" optional="true" label="Archive Replay Size" type="number" value="0" name="archiveReplaySize" numberType="int"/>
        <property label="Durable" type="boolean" value="true" name="durable"/>
        <property optional="true" label="Max Inactive Time" type="number" value="300" name="maxInactiveTime" numberType="int"/>
        <property hidden="true" label="Transactional" type="boolean" value="true" name="is_transactional"/>
      </DataSource>
      <Filter type="expression">
        <property name="filter-operation" type="string" value="RegExp"/>
        <property name="filter-argument" type="string" value=""/>
      </Filter>
    <Samples type="acquire">
      <Sample name="" label="* Source Definition" payloadId="SOURCE" mimeType="txt">
        <Param name="file" label="undefined" value="sample###txt###0" type="file"/>
      </Sample>
    </Samples>
      <Parser name="XMLToXMLConverter">
        <Component type="XMLSplitter" category="splitter">
          <properties>
            <property constraints="xmlPath" label="Split Path" type="string" name="xpath" value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; declare namespace vset=&quot;http://schema.vitria.com/Event/InputEvent&quot;; /vset:Event/vset:Input/tns:Input"/>
            <property optional="true" label="Keep Parent" type="boolean" value="false" name="keepParent"/>
          </properties>
        </Component>
        <Component type="XMLToXMLConverter" category="converter">
          <properties>
            <property type="boolean" value="false" name="daylight" hidden="true"/>
            <property type="string" value="Asia/Krasnoyarsk" name="timezone" hidden="true"/>
            <property hidden="true" type="boolean" value="false" name="remove_event_wrapper"/>
          </properties>
        </Component>
        <Mapping type="auto" namespace="http://default/EPNProject/Input" root="SourceEvent" prefix="n">
          <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input" label="Input/" name="Input">
            <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer" label="Input/Customer" name="Customer">
              <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/Name" label="Input/Customer/Name" name="Name" value="rtang" type="string"/>
              <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/ID" label="Input/Customer/ID" name="ID" value="123" type="integer"/>
              <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/Address" label="Input/Customer/Address" name="Address" value="fa" type="string"/>
            </group>
            <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder" label="Input/SubOrder" name="SubOrder">
              <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/No" label="Input/SubOrder/No" name="No" value="123" type="integer"/>
              <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/Price" label="Input/SubOrder/Price" name="Price" value="1" type="integer"/>
              <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/Count" label="Input/SubOrder/Count" name="Count" value="1" type="integer"/>
            </group>
            <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Ship" label="Input/Ship" name="Ship">
              <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Ship/city" label="Input/Ship/city" name="city" value="bj" type="string"/>
              <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Ship/type" label="Input/Ship/type" name="type" value="1" type="integer"/>
            </group>
          </group>
        </Mapping>
      </Parser>
    </Source>
    <MappingPaths>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input" label="Input/"/>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer" label="Input/Customer"/>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/Name/text()" label="Input/Customer/Name"/>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/ID/text()" label="Input/Customer/ID"/>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/Address/text()" label="Input/Customer/Address"/>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder" label="Input/SubOrder"/>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/No/text()" label="Input/SubOrder/No"/>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/Price/text()" label="Input/SubOrder/Price"/>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/Count/text()" label="Input/SubOrder/Count"/>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Ship" label="Input/Ship"/>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Ship/city/text()" label="Input/Ship/city"/>
     <path value="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Ship/type/text()" label="Input/Ship/type"/>
    </MappingPaths>
    <GlobalProperties>
    </GlobalProperties>
    <DeletedNamespaces>
    </DeletedNamespaces>
    <UserSchemas>
    </UserSchemas>
        <View name="ToFeedTarget" desc="">
        <Rule type="PerEvent"/>
        <Filters type="expression" relation="AND">
            <Filter op="EQ/S" arg1="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Ship/city" arg2="bj"/>
        </Filters>
        <Mapping output="xml" type="auto">
        </Mapping>
        <Targets>
           <Target name="FeedTarget" type="FeedTarget">
             <property constraints="feed" label="Feed Name" type="string" name="feedName" value="/prj/home/vtbaadmin/FeedSourceTarget$Deployment/FeedTarget"/>
             <property enums="event=event,variable=variable" label="Content Type" type="string" value="event" name="content_type"/>
             <property sourceDyn="true" contorlValue="variable" enumSource="rest:${feedName}?op=listvariables" controlName="content_type" optional="true" label="Variable Name" type="string" value="Output" name="variable_name"/>
             <Mapping output="xml" type="target" input="xml">
               <group id="/Event" label="/Event" name="Event" typeKind="XSDELEMENT" namespace="http://schema.vitria.com/Event/InputEvent" type="">
                 <group id="/Event/Input" label="/Event/Input" name="Input" namespace="http://schema.vitria.com/Event/InputEvent" type="">
                   <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input" label="/Event/Input/Input" name="Input" typeKind="XSDELEMENT" typeNamespace="http://default/EPNProject/Input" namespace="http://default/EPNProject/Input" type="Input">
                     <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Customer" label="/Event/Input/Input/Customer" name="Customer" typeKind="XSDELEMENT" type="">
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Customer/Name" label="/Event/Input/Input/Customer/Name" name="Name" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/Name/text()" type="string"/>
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Customer/ID" label="/Event/Input/Input/Customer/ID" name="ID" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/ID/text()" type="string"/>
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Customer/Address" label="/Event/Input/Input/Customer/Address" name="Address" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/Address/text()" type="string"/>
                     </group>
                     <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/SubOrder" label="/Event/Input/Input/SubOrder" name="SubOrder" typeKind="XSDELEMENT" type="">
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/SubOrder/No" label="/Event/Input/Input/SubOrder/No" name="No" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/No/text()" type="string"/>
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/SubOrder/Price" label="/Event/Input/Input/SubOrder/Price" name="Price" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/Price/text()" type="float"/>
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/SubOrder/Count" label="/Event/Input/Input/SubOrder/Count" name="Count" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/Count/text()" type="int"/>
                     </group>
                     <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Ship" label="/Event/Input/Input/Ship" name="Ship" typeKind="XSDELEMENT" type="">
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Ship/city" label="/Event/Input/Input/Ship/city" name="city" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Ship/city/text()" type="string"/>
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Ship/type" label="/Event/Input/Input/Ship/type" name="type" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Ship/type/text()" type="int"/>
                     </group>
                   </group>
                 </group>
               </group>
             </Mapping>
           </Target>
           <Target name="EPNTarget" type="ESMSTarget">
             <property constraints="EPNInputStream" desc="The input stream name of the target EPN. It consists of a project instance name and an input stream name, and uses a colon as the separator (for example, &apos;/home/vtbaadmin/EPN_inputStream$Deployment:inputstreamPort1&apos;)" label="EPN Input Stream" type="string" name="EPNInputStreamName" value="/home/vtbaadmin/FeedSourceTarget$Deployment:streamFeedSource"/>
             <property name="remove_event_wrapper" label="Remove wrapper" value="false" type="boolean"/>
             <property name="###parse_to_string###" label="Parse to String" value="false" type="boolean"/>
             <Mapping output="xml" type="target" input="xml">
               <group id="/Event" label="/Event" name="Event" typeKind="XSDELEMENT" namespace="http://schema.vitria.com/Event/InputEvent" type="">
                 <group id="/Event/Input" label="/Event/Input" name="Input" namespace="http://schema.vitria.com/Event/InputEvent" type="">
                   <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input" label="/Event/Input/Input" name="Input" typeKind="XSDELEMENT" typeNamespace="http://default/EPNProject/Input" namespace="http://default/EPNProject/Input" type="Input">
                     <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Customer" label="/Event/Input/Input/Customer" name="Customer" typeKind="XSDELEMENT" type="">
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Customer/Name" label="/Event/Input/Input/Customer/Name" name="Name" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/Name/text()" type="string"/>
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Customer/ID" label="/Event/Input/Input/Customer/ID" name="ID" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/ID/text()" type="string"/>
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Customer/Address" label="/Event/Input/Input/Customer/Address" name="Address" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/Address/text()" type="string"/>
                     </group>
                     <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/SubOrder" label="/Event/Input/Input/SubOrder" name="SubOrder" typeKind="XSDELEMENT" type="">
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/SubOrder/No" label="/Event/Input/Input/SubOrder/No" name="No" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/No/text()" type="string"/>
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/SubOrder/Price" label="/Event/Input/Input/SubOrder/Price" name="Price" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/Price/text()" type="float"/>
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/SubOrder/Count" label="/Event/Input/Input/SubOrder/Count" name="Count" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/SubOrder/Count/text()" type="int"/>
                     </group>
                     <group id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Ship" label="/Event/Input/Input/Ship" name="Ship" typeKind="XSDELEMENT" type="">
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Ship/city" label="/Event/Input/Input/Ship/city" name="city" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Ship/city/text()" type="string"/>
                       <field id="declare namespace tns=&quot;http://default/EPNProject/Input&quot;;/tns:Input/Ship/type" label="/Event/Input/Input/Ship/type" name="type" value="" typeKind="XSDELEMENT" typeNamespace="http://www.w3.org/2001/XMLSchema" mapping="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Ship/type/text()" type="int"/>
                     </group>
                   </group>
                 </group>
               </group>
             </Mapping>
           </Target>
           <Target name="NewFeedTarget" type="GeneratedFeed" persistence="OFF" maxSize="0" contentType="event" registryName="/reg/feed/FeedViews_ToFeedTarget_Target3" registered="false">
               <eventArchive type="COUNT">
                   <count>2000</count>
                   <persistentPolicy type="MEMORY">
                       <memorySize>0.01</memorySize>
                   </persistentPolicy>
               </eventArchive>
             <Mapping output="xml" type="auto" input="xml">
             </Mapping>
           </Target>
        </Targets>
    </View>
        <View name="FileView" desc="">
        <Rule type="PerEvent"/>
        <Filters type="expression" relation="AND">
            <Filter op="LT/I" arg1="declare namespace tns=&quot;http://default/EPNProject/Input&quot;; /tns:Input/Customer/ID" arg2="100"/>
        </Filters>
        <Mapping output="xml" type="auto">
        </Mapping>
        <Targets>
           <Target name="FileTarget" type="FileTarget">
             <property desc="The file and path name of the target." label="File Path" type="string" name="file" value="%VTBA_HOME%\FileTarget.txt"/>
             <property constraints="encoding" desc="The file encoding. The default is utf-8." optional="true" label="File Encoding" type="string" value="gb2312" name="fileEncoding"/>
             <property enums="string,xml,json,tuple," hidden="true" desc="The event type. Only string is supported." optional="true" label="Event Type" type="string" name="eventType"/>
             <property enums="DATE=DATE,SIZE=SIZE," enumDyn="true" desc="The file rollover pattern. It can be DATE (default) or SIZE." optional="true" label="Rollover Pattern" type="string" value="DATE" name="rolloverPattern"/>
             <property desc="The file rollover pattern for DATE. The default value is &apos;.&apos;yyyy-MM-dd&apos;.log&apos;. It is ignored for rollover pattern SIZE." optional="true" label="Date Pattern" type="string" name="datePattern"/>
             <property constraints="min=1024, max=10485760, step=1024" desc="The maximum file size in byte of rollover pattern SIZE. The default value is 5242880 (5MB). It is ignored for rollover pattern DATE." optional="true" label="Max File Size" type="number" name="maxFileSize" numberType="int"/>
             <property constraints="min=1, max=100, step=1" desc="The maximum number of backup files. The default value is 5." optional="true" label="Max Backup Index" type="number" name="maxBackupIndex" numberType="int"/>
             <property desc="The log4j pattern to write message into file. The default value is %m%n." optional="true" label="Conversion Pattern" type="string" name="conversionPattern"/>
             <property name="remove_event_wrapper" label="Remove wrapper" value="false" type="boolean"/>
             <property name="###parse_to_string###" label="Parse to String" value="false" type="boolean"/>
             <Mapping output="xml" type="auto" input="xml">
             </Mapping>
           </Target>
        </Targets>
    </View>
        <View name="JMSView" desc="">
        <Rule type="PerEvent"/>
        <Filters type="javascript">
          <Filter><![CDATA[var type = event.getType();
if (type == com.vitria.dataflow.model.EventType.XMLEvent.name()){
    var dom = event.getDocument();
    var Customer = xmlHelper.getFirstFromXPath(dom, "declare namespace tns=\"http://default/EPNProject/Input\";xs:string(/tns:Input/Customer/Name)");
    if (Customer == "rtang1") {
        return true;
    } else {
        return false;
    }
} else {
    return false;
}]]></Filter>
        </Filters>
        <Mapping output="xml" type="auto">
        </Mapping>
        <Targets>
           <Target name="JMSTarget" type="JMSTarget">
             <property enumDyn="true" enums="org.apache.activemq.jndi.ActiveMQInitialContextFactory,org.jboss.naming.remote.client.InitialContextFactory,com.vitria.jndi.qpid.amqp_1_0.NamingContextFactory," optional="true" label="JNDI Context Factory" type="string" name="initialContextFactory" desc="The JNDI initial context factory class name" value="org.jboss.naming.remote.client.InitialContextFactory"/>
             <property controlName="initialContextFactory" enums="azure=Windows Azure,qpid=QPID Broker," contorlValue="com.vitria.jndi.qpid.amqp_1_0.NamingContextFactory" optional="true" label="AMQP broker" type="string" value="azure" name="provider" desc=""/>
             <property enumDyn="true" enums="tcp://localhost:61616,http-remoting://localhost:8080,amqps://NAMESPACE.servicebus.windows.net:5671,amqps://localhost:5671/?remote-host%3Ddefault,amqp://localhost:5672/?remote-host%3Ddefault," optional="true" label="JNDI Provider URL" type="string" name="providerURL" desc="The JNDI provider URL" value="http-remoting://localhost:8080"/>
             <property constraints="xmlMap" optional="true" label="JNDI Extra Properties" type="xmldom" name="jndiExtraProperties" desc="Some JNDI providers may need additional keys and value pairs. The property is used to define the pairs."/>
             <property enumDyn="true" enums="ConnectionFactory," label="Connection Factory" type="string" name="connectionFactory" desc="The JMS connection factory JNDI name" value="ConnectionFactory"/>
             <property label="Destination Name" type="string" name="destinationName" desc="The JMS topic or queue JNDI name" value="/queue/D"/>
             <property enums="queue=queue,topic=topic," label="Destination Type" type="string" value="queue" name="destinationType" desc="The destination type is either queue or topic"/>
             <property controlName="destinationType" contorlValue="topic" optional="true" label="Routing Key" type="string" value="default" name="routingKey" desc="The QPID publish rounting key and it is only required when connecting to apache QPID broker through AMQP"/>
             <property enums="AUTO=AUTO,LOCAL=LOCAL,NONE=NONE," optional="true" label="Transaction Support" type="string" value="AUTO" name="transaction" desc=""/>
             <property optional="true" label="User" type="string" name="user" desc="The JMS system user"/>
             <property constraints="password" optional="true" label="Password" type="string" name="password" desc="The JMS system password"/>
             <property optional="true" label="Persistent" type="boolean" value="true" name="persistent" desc="Specify whether to publish a persistent JMS message to the queue or topic"/>
             <property constraints="file(encode:base64)" optional="true" label="Trust Store File" type="file" name="trustStoreFile" desc="The JKS format java trust store file"/>
             <property constraints="password" optional="true" label="Trust Store Password" type="string" name="trustStorePassword" desc="The trust store file password"/>
             <property constraints="file(encode:base64)" optional="true" label="Key Store File" type="file" name="keyStoreFile" desc="The JKS format java key store file"/>
             <property constraints="password" optional="true" label="Key Store Password" type="string" name="keyStorePassword" desc="The key store file password "/>
             <property optional="true" label="Key Store Key Alias" type="string" name="keyStoreCertAlias" desc="The key alias name of the certificate in the key store"/>
             <property enumSource="rest:/app.mgr/apps/flow?op=list.lib.module" multiple="true" optional="true" label="Depended Modules" type="string" name="dataflow_module_dependency" desc="The dependent JMS client lib module name" value=""/>
             <property name="remove_event_wrapper" label="Remove Wrapper" value="false" type="boolean"/>
             <property name="###parse_to_string###" label="Parse to String" value="false" type="boolean"/>
             <Mapping output="xml" type="auto" input="xml">
             </Mapping>
           </Target>
        </Targets>
    </View>
    <DeploymentSetting>
      <ServerTag value=""/>
      <QOS value="0"/>
      <AdvancedProperties>
        <property componentType="FeedSource" batch_size="500" dataflow_throttling_policy="slowdown" batch_time="-1" modelComponentType="FeedSource" componentGroup="Source" componentCategory="source" componentName="AS_Source_Source" enable_monitor="true" dataflow_eps_limit="-1" poll_rate="2000"/>
        <property componentType="XMLSplitter" dataflow_throttling_policy="slowdown" buffer_size="1000" modelComponentType="XMLSplitter" componentGroup="" componentCategory="splitter" componentName="AS_Source_Splitter" enable_monitor="true" dataflow_eps_limit="-1" concurrency="0"/>
        <property componentType="XMLToXMLConverter" dataflow_throttling_policy="slowdown" buffer_size="1000" modelComponentType="XMLToXMLConverter" componentGroup="" componentCategory="converter" componentName="AS_Source_Converter" enable_monitor="true" dataflow_eps_limit="-1" concurrency="0"/>
        <property componentType="XMLFilter" entry="ToFeedTarget" dataflow_throttling_policy="slowdown" buffer_size="1000" modelComponentType="XMLFilter" componentGroup="ToFeedTarget" componentCategory="filter" componentName="AS_Views_ToFeedTarget_Filters" enable_monitor="true" dataflow_eps_limit="-1" concurrency="0"/>
        <property componentType="FeedTarget/XMLToXMLConverter" entry="ToFeedTarget/FeedTarget" dataflow_throttling_policy="slowdown" buffer_size="1000" modelComponentType="XMLToXMLConverter" componentGroup="" componentCategory="converter" componentName="AS_Views_ToFeedTarget_Targets_FeedTarget_Converter" enable_monitor="true" dataflow_eps_limit="-1" concurrency="0"/>
        <property componentType="FeedTarget/FeedTarget" batch_size="-1" dataflow_throttling_policy="slowdown" buffer_size="1000" batch_time="-1" modelComponentType="FeedTarget" componentGroup="" componentCategory="target" componentName="AS_Views_ToFeedTarget_Targets_FeedTarget_Target" enable_monitor="true" dataflow_eps_limit="-1"/>
        <property componentType="EPNTarget/XMLToXMLConverter" entry="ToFeedTarget/EPNTarget" dataflow_throttling_policy="slowdown" buffer_size="1000" modelComponentType="XMLToXMLConverter" componentGroup="" componentCategory="converter" componentName="AS_Views_ToFeedTarget_Targets_EPNTarget_Converter" enable_monitor="true" dataflow_eps_limit="-1" concurrency="0"/>
        <property componentType="EPNTarget/ESMSTarget" batch_size="-1" dataflow_throttling_policy="slowdown" buffer_size="1000" batch_time="-1" modelComponentType="ESMSTarget" componentGroup="" componentCategory="target" componentName="AS_Views_ToFeedTarget_Targets_EPNTarget_Target" enable_monitor="true" dataflow_eps_limit="-1"/>
        <property componentType="NewFeedTarget/FeedTarget" entry="ToFeedTarget/NewFeedTarget" batch_size="-1" dataflow_throttling_policy="slowdown" buffer_size="1000" batch_time="-1" modelComponentType="FeedTarget" componentGroup="" componentCategory="target" componentName="AS_Views_ToFeedTarget_Targets_NewFeedTarget_Target" enable_monitor="true" dataflow_eps_limit="-1"/>
        <property componentType="XMLFilter" entry="FileView" dataflow_throttling_policy="slowdown" buffer_size="1000" modelComponentType="XMLFilter" componentGroup="FileView" componentCategory="filter" componentName="AS_Views_FileView_Filters" enable_monitor="true" dataflow_eps_limit="-1" concurrency="0"/>
        <property componentType="FileTarget/FileTarget" entry="FileView/FileTarget" batch_size="-1" dataflow_throttling_policy="slowdown" buffer_size="1000" batch_time="-1" modelComponentType="FileTarget" componentGroup="" componentCategory="target" componentName="AS_Views_FileView_Targets_FileTarget_Target" enable_monitor="true" dataflow_eps_limit="-1"/>
        <property componentType="ScriptFilter" entry="JMSView" dataflow_throttling_policy="slowdown" buffer_size="1000" modelComponentType="ScriptFilter" componentGroup="JMSView" componentCategory="filter" componentName="AS_Views_JMSView_Filters" enable_monitor="true" dataflow_eps_limit="-1" concurrency="0"/>
        <property componentType="JMSTarget/JMSTarget" entry="JMSView/JMSTarget" batch_size="-1" dataflow_throttling_policy="slowdown" buffer_size="1000" batch_time="-1" modelComponentType="JMSTarget" componentGroup="" componentCategory="target" componentName="AS_Views_JMSView_Targets_JMSTarget_Target" enable_monitor="true" dataflow_eps_limit="-1"/>
      </AdvancedProperties>
      <ExceptionCondition act="ignore" logException="true" logEvent="true">
        <Source retry="5" delay="5" timeunit="second"/>
        <Target retry="5" delay="5" timeunit="second"/>
      </ExceptionCondition>
    </DeploymentSetting>
  </ModelInfo>
</ActivityStreamModel>