<AnalyticsExplorerView description="" name="module - Security Settings v1" is_init="false">
  <ModelInfo validated="true" nextPageId="3">
    <GlobalDSRSetting enabled="false"/>
    <GlobalProperties/>
    <GlobalThemeSetting>
      <SelectedTheme theme="{&quot;id&quot;:null,&quot;name&quot;:&quot;Vitria Default Theme&quot;,&quot;label&quot;:&quot;Vitria Default Theme&quot;}"/>
      <TileOpacity opacity="0.8"/>
      <NoTileSpacing value="true"/>
    </GlobalThemeSetting>
    <I18NTab>
      <name value="default"/>
    </I18NTab>
    <TabNavSetting visible="false"/>
    <DWRSetting disable="false"/>
    <CustomCSSSetting><![CDATA[.app .smallTile .tileContainer.actionbar {
    margin-top: -7px;
    margin-left: -3px;
    padding: 0px;
    height: 58px !important;
}
]]></CustomCSSSetting>
    <Page id="2" name="Default" title="Default" desc="" tabNavVisible="true" panelposition="right" panelstatus="closed" className="compTemplate">
      <HelpContent><![CDATA[]]></HelpContent>
      <PageFrameContent><![CDATA[<div style="width:100%;height:100%;background-color:white;" class="security-frame vertical-flex">
    <div class="horizontal-flex header" style="justify-content: space-between;">
        <div class="horizontal-flex headerTitle" style="width: calc( 100% - 200px ); height: 50px; border: none; justify-content: flex-start; padding-left: 10px;">
            <i class="fa fa-user-secret"></i> 
            <div class="security-title">Security Policy Management</div>
        </div>
        <div class="horizontal-flex header" style="width: 200px; height: 50px; border: none;" data-vitria-type="tile" data-vitria-tile-name="Tile1"></div>
    </div>
    <div class="horizontal-flex" style="width: 100%; height: calc(100% - 50px);">
        <div class="horizontal-flex compContent" style="width: 100%; height: 100%;">
            <div class="listPanel" style="position: absolute; top:50px; left: 0px; width: 0px; height: calc(100% - 50px);" data-vitria-type="tile" data-vitria-tile-name="ListTile"></div>
            <div class="infoPanel" style="visibility: visible; position: absolute; top:50px; left: 0px; width: calc( 100% ); height: calc( 100% - 50px);">
                <div style="height: 100%; width: 100%; display: block;">
                    <div id="cont_policyTab" class="policy-tab-tile" style="height: 30px; width: calc(100% - 20px);" data-vitria-type="tile" data-vitria-tile-name="PolicyTab">
                    </div>
                    <div class="tabPanel login-tile" id="login_Policy" style="visibility: visible; position: absolute;top: 38px; left: 10px; height: calc( 100% - 50px); width: calc(100% - 20px);" data-vitria-type="tile" data-vitria-tile-name="LoginPolicy">
                    </div>
                    <div class="tabPanel pwd-tile" id="pwd_Policy" style="visibility: hidden; position: absolute;top: 38px; left: 10px; height: calc( 100% - 50px); width: calc(100% - 20px);" data-vitria-type="tile" data-vitria-tile-name="PasswordPolicy">
                    </div>
                    <div class="tabPanel log-tile" id="log_Policy" style="visibility: hidden; position: absolute;top: 38px; left: 10px; height: calc( 100% - 50px); width: calc(100% - 20px);" data-vitria-type="tile" data-vitria-tile-name="LogPolicy">
                    </div>
                    <div class="tabPanel encryption-tile" id="encryption_Policy" style="visibility: hidden; position: absolute;top: 38px; left: 10px; height: calc( 100% - 50px); width: calc(100% - 20px);" data-vitria-type="tile" data-vitria-tile-name="EncryptionPolicy">
                    </div>
                    <div class="tabPanel kerberos-tile" id="kerberos_Policy" style="visibility: hidden; position: absolute;top: 38px; left: 10px; height: calc( 100% - 50px); width: calc(100% - 20px);" data-vitria-type="tile" data-vitria-tile-name="KerberosPolicy">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>]]></PageFrameContent>
      <PageCustomCSS><![CDATA[
.security-frame .tabPanel {
    visibility: hidden;   
}

/*
.spaceComp  label:before {
  font-family: fontawesome;
  font-weight: normal;
  margin-right: 10px;
}

.spaceComp [for*='1']:before { font-family: FontAwesome; content: '\f1cb'; }
.spaceComp label[for*='2']:before { font-family: FontAwesome; content: '\f17d'; }
.spaceComp label[for*='3']:before { font-family: FontAwesome; content: '\f16b'; }
.spaceComp label[for*='4']:before { font-family: FontAwesome; content: '\f1a9'; }
*/
#tab_loginPolicy:checked ~ #cont_loginPolicy,
#tab_pwdPolicy:checked ~ #cont_pwdPolicy,
#tab_logPolicy:checked ~ #cont_logPolicy,
#tab_encryptionPolicy:checked ~ #cont_encryptionPolicy,
#tab_kerberosPolicy:checked ~ #cont_kerberosPolicy {

  visibility: visible;
}


]]></PageCustomCSS>
      <PageProperties/>
      <Layout type="10" numRow="NaN" numCol="NaN" count="NaN" templateType="7" screenHeight="undefined" renderType="undefined" positions="[]" unitSize="undefined" viewRows="NaN" viewCols="NaN"/>
      <frame_tile name="toolbar1" title="toolbar1" desc="" previewSize="15" type="Independent" style="small" sampleData="false" className="actionbar" parentSelect="false" advancedConfig="false" advancedDisable="true" allowFullscreen="false">
        <DataSource category="#NONE" id="undefined" untyped="true" name="#NONE" label="(not configured)"/>
        <LabelStyle><![CDATA[{"display":"none"}]]></LabelStyle>
        <TileThemeSetting><![CDATA[{"_tileOpacity":"0.1"}]]></TileThemeSetting>
        <DataViewer name="dbp.Renderer" label="Dashboard Module" optional="false" minimode="false">
          <Property name="generalProperties" value="{&quot;_model&quot;:&quot;/app/dbp/space/VIA Admin Modules/dbpm/Admin - Plugin/Action Bar&quot;}"/>
          <Ports/>
        </DataViewer>
      </frame_tile>
      <frame_tile name="Main Tile1" title="Configured User Spaces" desc="" previewSize="15" type="Independent" style="small" sampleData="false" className="" parentSelect="false" advancedConfig="false" advancedDisable="false" allowFullscreen="false">
        <DataSource category="#ClientSideResource" id="axflow:localstore:node:23" name="axflow:localstore:node:23" label="Local Store 0" type="#ScriptDataStore">
          <Param name="where" label="Where Clause" value="" binding="" type="string"/>
          <Param name="sort" label="Sort Order" value="" binding="" type="string"/>
          <Field name="attemptLimits" label="Attempt Limits" type="string" isDimension="false" isMeasure="false"/>
          <Field name="lockDuration" label="Lock Duration" type="string" isDimension="false" isMeasure="false"/>
          <Field name="tokenInactiveTimeout" label="Token Inactive Timeout" type="string" isDimension="false" isMeasure="false"/>
          <Field name="tokenTotalTimeout" label="Token Total Timeout" type="string" isDimension="false" isMeasure="false"/>
        </DataSource>
        <LabelStyle><![CDATA[{"fontSize":"18px","display":"block","color":"#555555"}]]></LabelStyle>
      </frame_tile>
      <frame_tile name="PolicyTab" title="Policy Tab" desc="" previewSize="15" type="Independent" style="small" sampleData="false" className="" parentSelect="false" advancedConfig="false" advancedDisable="true" allowFullscreen="false">
        <DataSource category="#ClientSideResource" id="axflow:localstore:node:26" name="axflow:localstore:node:26" label="PasswordPolicy" type="#ScriptDataStore">
          <Param name="where" label="Where Clause" value="" binding="" type="string"/>
          <Param name="sort" label="Sort Order" value="" binding="" type="string"/>
          <Field name="minLength" label="Minimum Length" type="string" isDimension="false" isMeasure="false"/>
          <Field name="maxLength" label="Maximum Length" type="string" isDimension="false" isMeasure="false"/>
          <Field name="mandatoryChars" label="Mandatory Characters" type="string" isDimension="false" isMeasure="false"/>
        </DataSource>
        <LabelStyle><![CDATA[{"display":"none"}]]></LabelStyle>
        <DataViewer name="dbp.Renderer" label="Dashboard Module" optional="false" minimode="false">
          <Property name="generalProperties" value="{&quot;_model&quot;:&quot;/app/dbp/space/VIA Admin Modules/dbpm/Admin - Security Setting/PolicyTabRenderer&quot;}"/>
          <Ports/>
        </DataViewer>
      </frame_tile>
      <frame_tile name="LoginPolicy" title="Login Policy" desc="" previewSize="15" type="Independent" style="small" sampleData="false" className="" parentSelect="false" advancedConfig="false" advancedDisable="true" allowFullscreen="false">
        <DataSource category="#ClientSideResource" id="axflow:localstore:node:23" name="axflow:localstore:node:23" label="LoginPolicy" type="#ScriptDataStore">
          <Param name="where" label="Where Clause" value="" binding="" type="string"/>
          <Param name="sort" label="Sort Order" value="" binding="" type="string"/>
          <Field name="attemptLimits" label="Attempt Limits" type="string" isDimension="false" isMeasure="false"/>
          <Field name="lockDuration" label="Lock Duration" type="string" isDimension="false" isMeasure="false"/>
          <Field name="tokenInactiveTimeout" label="Token Inactive Timeout" type="string" isDimension="false" isMeasure="false"/>
          <Field name="tokenTotalTimeout" label="Token Total Timeout" type="string" isDimension="false" isMeasure="false"/>
        </DataSource>
        <LabelStyle><![CDATA[{"display":"none"}]]></LabelStyle>
        <DataViewer name="dbp.Renderer" label="Dashboard Module" optional="false" minimode="false">
          <Property name="generalProperties" value="{&quot;_model&quot;:&quot;/app/dbp/space/VIA Admin Modules/dbpm/Admin - Security Setting/LoginPolicyRenderer&quot;}"/>
          <Ports/>
        </DataViewer>
      </frame_tile>
      <frame_tile name="PasswordPolicy" title="Password Policy" desc="" previewSize="15" type="Independent" style="small" sampleData="false" className="" parentSelect="false" advancedConfig="false" advancedDisable="true" allowFullscreen="false">
        <DataSource category="#ClientSideResource" id="axflow:localstore:node:26" name="axflow:localstore:node:26" label="PasswordPolicy" type="#ScriptDataStore">
          <Param name="where" label="Where Clause" value="" binding="" type="string"/>
          <Param name="sort" label="Sort Order" value="" binding="" type="string"/>
          <Field name="minLength" label="Minimum Length" type="string" isDimension="false" isMeasure="false"/>
          <Field name="maxLength" label="Maximum Length" type="string" isDimension="false" isMeasure="false"/>
          <Field name="mandatoryChars" label="Mandatory Characters" type="string" isDimension="false" isMeasure="false"/>
        </DataSource>
        <LabelStyle><![CDATA[{"display":"none"}]]></LabelStyle>
        <DataViewer name="dbp.Renderer" label="Dashboard Module" optional="false" minimode="false">
          <Property name="generalProperties" value="{&quot;_model&quot;:&quot;/app/dbp/space/VIA Admin Modules/dbpm/Admin - Security Setting/PasswordPolicyRenderer&quot;}"/>
          <Ports/>
        </DataViewer>
      </frame_tile>
      <frame_tile name="LogPolicy" title="Log Policy" desc="" previewSize="15" type="Independent" style="small" sampleData="false" className="" parentSelect="false" advancedConfig="false" advancedDisable="true" allowFullscreen="false">
        <DataSource category="#ClientSideResource" id="axflow:localstore:node:29" name="axflow:localstore:node:29" label="LogPolicy" type="#ScriptDataStore">
          <Param name="where" label="Where Clause" value="" binding="" type="string"/>
          <Param name="sort" label="Sort Order" value="" binding="" type="string"/>
          <Field name="authentication" label="Authentication" type="string" isDimension="false" isMeasure="false"/>
          <Field name="cryptography" label="Cryptography" type="string" isDimension="false" isMeasure="false"/>
          <Field name="logging" label="Logging" type="string" isDimension="false" isMeasure="false"/>
          <Field name="rbac" label="RBAC" type="string" isDimension="false" isMeasure="false"/>
          <Field name="user" label="User" type="string" isDimension="false" isMeasure="false"/>
        </DataSource>
        <LabelStyle><![CDATA[{"display":"none"}]]></LabelStyle>
        <DataViewer name="dbp.Renderer" label="Dashboard Module" optional="false" minimode="false">
          <Property name="generalProperties" value="{&quot;_model&quot;:&quot;/app/dbp/space/VIA Admin Modules/dbpm/Admin - Security Setting/LogPolicyRenderer&quot;}"/>
          <Ports/>
        </DataViewer>
      </frame_tile>
      <frame_tile name="EncryptionPolicy" title="Encryption Policy" desc="" previewSize="15" type="Independent" style="small" sampleData="false" className="" parentSelect="false" advancedConfig="false" advancedDisable="true" allowFullscreen="false">
        <DataSource category="#ClientSideResource" id="axflow:localstore:node:32" name="axflow:localstore:node:32" label="EncryptionKeys" type="#ScriptDataStore">
          <Param name="where" label="Where Clause" value="" binding="" type="string"/>
          <Param name="sort" label="Sort Order" value="" binding="" type="string"/>
          <Field name="uiKey" label="UI Key" type="string" isDimension="false" isMeasure="false"/>
          <Field name="serverKey" label="Server Key" type="string" isDimension="false" isMeasure="false"/>
        </DataSource>
        <LabelStyle><![CDATA[{"display":"none"}]]></LabelStyle>
        <DataViewer name="dbp.Renderer" label="Dashboard Module" optional="false" minimode="false">
          <Property name="generalProperties" value="{&quot;_model&quot;:&quot;/app/dbp/space/VIA Admin Modules/dbpm/Admin - Security Setting/EncryptionPolicyRenderer&quot;}"/>
          <Ports/>
        </DataViewer>
      </frame_tile>
      <frame_tile name="KerberosPolicy" title="Kerberos Policy" desc="" previewSize="15" type="Independent" style="small" sampleData="false" className="" parentSelect="false" advancedConfig="false" advancedDisable="true" allowFullscreen="false">
        <DataSource category="#ClientSideResource" id="axflow:localstore:node:35" name="axflow:localstore:node:35" label="KerberosSetting" type="#ScriptDataStore">
          <Param name="where" label="Where Clause" value="" binding="" type="string"/>
          <Param name="sort" label="Sort Order" value="" binding="" type="string"/>
          <Field name="enabled" label="Enabled" type="string" isDimension="false" isMeasure="false"/>
          <Field name="principal" label="Principal" type="string" isDimension="false" isMeasure="false"/>
          <Field name="configFile" label="Config File" type="string" isDimension="false" isMeasure="false"/>
          <Field name="keytabFile" label="Keytab File" type="string" isDimension="false" isMeasure="false"/>
        </DataSource>
        <LabelStyle><![CDATA[{"display":"none"}]]></LabelStyle>
        <DataViewer name="dbp.Renderer" label="Dashboard Module" optional="false" minimode="false">
          <Property name="generalProperties" value="{&quot;_model&quot;:&quot;/app/dbp/space/VIA Admin Modules/dbpm/Admin - Security Setting/KerberosPolicyRenderer&quot;}"/>
          <Ports/>
        </DataViewer>
      </frame_tile>
    </Page>
    <Script>
      <Stores/>
    </Script>
    <DataFlow showFooter="true">
      <Item id="node:9" type="UserScript" label="Toolbar Selection" _undefined_title="" originHeight="100" width="120" height="117" x="593" y="120">
        <dynIn id="din:0" type="event[]" label="Action" evaluate="always" _isArray="true"/>
        <dynOut id="dout:0" type="any" label="Out(0)" propagate="always" _isArray="true"/>
        <dynOut id="dout:1" type="json" label="Notify" propagate="always" _isArray="true"/>
      </Item>
      <Item id="node:20" type="Tile" label="Toolbar Tile" _undefined_title="" _undefined_originHeight="" width="120" height="160" x="434" y="120"/>
      <Item id="node:22" type="UserScript" label="Get Policy" _undefined_title="" originHeight="100" width="120" height="160" x="752" y="120">
        <dynIn id="din:0" type="any" label="In(0)" evaluate="always" _isArray="true"/>
        <dynOut id="dout:0" type="event[]" label="Login" propagate="always" _isArray="true"/>
        <dynOut id="dout:1" type="event[]" label="Password" propagate="always" _isArray="true"/>
        <dynOut id="dout:2" type="event[]" label="Log" propagate="always" _isArray="true"/>
        <dynOut id="dout:3" type="event[]" label="Encryption" propagate="always" _isArray="true"/>
        <dynOut id="dout:4" type="event[]" label="Kerberos" propagate="always" _isArray="true"/>
      </Item>
      <Item id="node:23" type="LocalStore" label="LoginPolicy" _undefined_title="" _undefined_originHeight="" width="120" height="160" x="940" y="120"/>
      <Item id="node:26" type="LocalStore" label="PasswordPolicy" _undefined_title="" _undefined_originHeight="" width="120" height="160" x="940" y="300"/>
      <Item id="node:29" type="LocalStore" label="LogPolicy" _undefined_title="" _undefined_originHeight="" width="120" height="160" x="940" y="474"/>
      <Item id="node:32" type="LocalStore" label="EncryptionKeys" _undefined_title="" _undefined_originHeight="" width="120" height="160" x="940" y="646"/>
      <Item id="node:35" type="LocalStore" label="KerberosSetting" _undefined_title="" _undefined_originHeight="" width="120" height="160" x="940" y="820"/>
      <Item id="node:37" type="PortIn" label="Port IN 0" _undefined_title="" originHeight="117" width="130" height="177" x="6" y="100">
        <dynOut id="dout:0" type="json" label="baseConfig" propagate="always" _isArray="true"/>
        <dynOut id="dout:1" type="any" label="locale" propagate="always" _isArray="true"/>
      </Item>
      <Item id="node:39" type="Tile" label="LoginPolicy Tile" _undefined_title="" _undefined_originHeight="" width="140" height="177" x="440" y="460"/>
      <Item id="node:41" type="Tile" label="Tab Tile" _undefined_title="" _undefined_originHeight="" width="140" height="177" x="592" y="300"/>
      <Item id="node:42" type="UserScript" label="Switch Policy" _undefined_title="" _undefined_originHeight="" width="130" height="117" x="760" y="300">
        <dynIn id="din:0" type="event[]" label="Action" evaluate="always" _isArray="true"/>
        <dynOut id="dout:0" type="any,json" label="Notify" propagate="always" _isArray="true"/>
      </Item>
      <Item id="node:44" type="UserScript" label="Parse Config" _undefined_title="" originHeight="117" width="200" height="117" x="180" y="120">
        <dynIn id="din:0" type="json" label="baseConfig" evaluate="always" _isArray="true"/>
        <dynIn id="din:1" type="any" label="locale" evaluate="always" _isArray="true"/>
        <dynOut id="dout:0" type="any" label="menu model" propagate="always" _isArray="true"/>
        <dynOut id="dout:1" type="any" label="configLocale" propagate="always" _isArray="true"/>
      </Item>
      <Item id="node:46" type="Tile" label="PasswordPolicy Tile" _undefined_title="" _undefined_originHeight="" width="140" height="177" x="440" y="520"/>
      <Item id="node:47" type="Tile" label="LogPolicy Tile" _undefined_title="" _undefined_originHeight="" width="140" height="177" x="440" y="580"/>
      <Item id="node:48" type="Tile" label="EncryptionPolicy Tile" _undefined_title="" _undefined_originHeight="" width="140" height="177" x="440" y="646"/>
      <Item id="node:49" type="Tile" label="KerberosPolicy Tile" _undefined_title="" _undefined_originHeight="" width="140" height="177" x="440" y="714"/>
      <Link srcId="node:44" srcPort="dout:0" tgtId="node:20" tgtPort="in:0"/>
      <Link srcId="node:37" srcPort="dout:1" tgtId="node:44" tgtPort="din:1"/>
      <Link srcId="node:37" srcPort="dout:0" tgtId="node:44" tgtPort="din:0"/>
      <Link srcId="node:9" srcPort="dout:1" tgtId="node:41" tgtPort="in:0"/>
      <Link srcId="node:20" srcPort="out:0" tgtId="node:9" tgtPort="din:0"/>
      <Link srcId="node:22" srcPort="dout:0" tgtId="node:23" tgtPort="in:0"/>
      <Link srcId="node:22" srcPort="dout:1" tgtId="node:26" tgtPort="in:0"/>
      <Link srcId="node:9" srcPort="dout:0" tgtId="node:22" tgtPort="din:0"/>
      <Link srcId="node:22" srcPort="dout:2" tgtId="node:29" tgtPort="in:0"/>
      <Link srcId="node:22" srcPort="dout:3" tgtId="node:32" tgtPort="in:0"/>
      <Link srcId="node:22" srcPort="dout:4" tgtId="node:35" tgtPort="in:0"/>
      <Link srcId="node:41" srcPort="out:0" tgtId="node:42" tgtPort="din:0"/>
      <Link srcId="node:44" srcPort="dout:1" tgtId="node:39" tgtPort="in:0"/>
      <Link srcId="node:44" srcPort="dout:1" tgtId="node:46" tgtPort="in:0"/>
      <Link srcId="node:44" srcPort="dout:1" tgtId="node:47" tgtPort="in:0"/>
      <Link srcId="node:44" srcPort="dout:1" tgtId="node:48" tgtPort="in:0"/>
      <Link srcId="node:44" srcPort="dout:1" tgtId="node:49" tgtPort="in:0"/>
      <Input key="node:9/cfg:inPorts/default" value="[{&quot;portId&quot;:&quot;din:0&quot;,&quot;portType&quot;:&quot;event[]&quot;,&quot;portLabel&quot;:&quot;Action&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:9/cfg:model/default" value="&quot;if (port == \&quot;din:0\&quot;) {\n    var action = getInput(\&quot;din:0\&quot;);\n    if (action != null &amp;&amp; action.length == 1) {\n        action = action[0];\n        switch (action.value) {\n            case \&quot;security/login\&quot;:\n                setOutput(\&quot;dout:1\&quot;, {\n                    tabName: \&quot;login\&quot;\n                });\n                break;\n            case \&quot;security/password\&quot;:\n                setOutput(\&quot;dout:1\&quot;, {\n                    tabName: \&quot;password\&quot;\n                });\n                break;\n            case \&quot;security/log\&quot;:\n                setOutput(\&quot;dout:1\&quot;, {\n                    tabName: \&quot;log\&quot;\n                });\n                break;\n            case \&quot;security/encryption\&quot;:\n                setOutput(\&quot;dout:1\&quot;, {\n                    tabName: \&quot;encryption\&quot;\n                });\n                break;\n            case \&quot;security/kerberos\&quot;:\n                setOutput(\&quot;dout:1\&quot;, {\n                    tabName: \&quot;kerberos\&quot;\n                });\n                break;\n            case \&quot;security/refresh\&quot;:\n                setOutput(\&quot;dout:1\&quot;, {\n                    tabName: \&quot;refresh\&quot;\n                });\n                setOutput(\&quot;dout:0\&quot;, (new Date()).getTime());\n                break;\n        }\n    }\n}\n\n\n&quot;"/>
      <Input key="node:9/cfg:outPorts/default" value="[{&quot;portId&quot;:&quot;dout:0&quot;,&quot;portType&quot;:&quot;any&quot;,&quot;portLabel&quot;:&quot;Out(0)&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;},{&quot;portId&quot;:&quot;dout:1&quot;,&quot;portType&quot;:&quot;json&quot;,&quot;portLabel&quot;:&quot;Notify&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:20/cfg:tile/default" value="[{&quot;id&quot;:&quot;ROOT#2#toolbar1&quot;,&quot;path&quot;:[&quot;Default&quot;],&quot;name&quot;:&quot;toolbar1&quot;}]"/>
      <Input key="node:22/cfg:schema/default" value="&quot;var schema0 = [];\r\nschema0.push({\r\n    name:\&quot;attemptLimits\&quot;,\r\n    label:\&quot;Attempt Limits\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema0.push({\r\n    name:\&quot;lockDuration\&quot;,\r\n    label:\&quot;Lock Duration\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema0.push({\r\n    name:\&quot;tokenInactiveTimeout\&quot;,\r\n    label:\&quot;Token Inactive Timeout\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema0.push({\r\n    name:\&quot;tokenTotalTimeout\&quot;,\r\n    label:\&quot;Token Total Timeout\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nsetOutputSchema(\&quot;dout:0\&quot;, schema0);\r\n\r\nvar schema1 = [];\r\nschema1.push({\r\n    name:\&quot;minLength\&quot;,\r\n    label:\&quot;Minimum Length\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema1.push({\r\n    name:\&quot;maxLength\&quot;,\r\n    label:\&quot;Maximum Length\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema1.push({\r\n    name:\&quot;mandatoryChars\&quot;,\r\n    label:\&quot;Mandatory Characters\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nsetOutputSchema(\&quot;dout:1\&quot;, schema1);\r\n\r\nvar schema2 = [];\r\nschema2.push({\r\n    name:\&quot;authentication\&quot;,\r\n    label:\&quot;Authentication\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema2.push({\r\n    name:\&quot;cryptography\&quot;,\r\n    label:\&quot;Cryptography\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema2.push({\r\n    name:\&quot;logging\&quot;,\r\n    label:\&quot;Logging\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema2.push({\r\n    name:\&quot;rbac\&quot;,\r\n    label:\&quot;RBAC\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema2.push({\r\n    name:\&quot;user\&quot;,\r\n    label:\&quot;User\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nsetOutputSchema(\&quot;dout:2\&quot;, schema2);\r\n\r\nvar schema3 = [];\r\nschema3.push({\r\n    name:\&quot;uiKey\&quot;,\r\n    label:\&quot;UI Key\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema3.push({\r\n    name:\&quot;serverKey\&quot;,\r\n    label:\&quot;Server Key\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nsetOutputSchema(\&quot;dout:3\&quot;, schema3);\r\n\r\nvar schema4 = [];\r\nschema4.push({\r\n    name:\&quot;enabled\&quot;,\r\n    label:\&quot;Enabled\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema4.push({\r\n    name:\&quot;principal\&quot;,\r\n    label:\&quot;Principal\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema4.push({\r\n    name:\&quot;configFile\&quot;,\r\n    label:\&quot;Config File\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nschema4.push({\r\n    name:\&quot;keytabFile\&quot;,\r\n    label:\&quot;Keytab File\&quot;,\r\n    type:\&quot;string\&quot;\r\n});\r\nsetOutputSchema(\&quot;dout:4\&quot;, schema4);\r\n&quot;"/>
      <Input key="node:22/cfg:outPorts/default" value="[{&quot;portId&quot;:&quot;dout:0&quot;,&quot;portType&quot;:&quot;event[]&quot;,&quot;portLabel&quot;:&quot;Login&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;},{&quot;portId&quot;:&quot;dout:1&quot;,&quot;portType&quot;:&quot;event[]&quot;,&quot;portLabel&quot;:&quot;Password&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;},{&quot;portId&quot;:&quot;dout:2&quot;,&quot;portType&quot;:&quot;event[]&quot;,&quot;portLabel&quot;:&quot;Log&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;},{&quot;portId&quot;:&quot;dout:3&quot;,&quot;portType&quot;:&quot;event[]&quot;,&quot;portLabel&quot;:&quot;Encryption&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;},{&quot;portId&quot;:&quot;dout:4&quot;,&quot;portType&quot;:&quot;event[]&quot;,&quot;portLabel&quot;:&quot;Kerberos&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:22/cfg:model/default" value="&quot;function getColor(value)\n{\n    switch (value) {\n        case \&quot;Yes\&quot;:\n            return \&quot;green\&quot;;\n        case \&quot;No\&quot;:\n            return \&quot;red\&quot;;\n    }\n    return \&quot;lightgray\&quot;;\n}\n\nvar plugin = Plugin(\&quot;Admin - Plugin\&quot;);\nif (plugin != null) {\n    plugin.doGetLoginPolicy(function(policy) {\n        setOutput(\&quot;dout:0\&quot;, [policy]);\n    });\n    plugin.doGetPasswordPolicy(function(policy) {\n        setOutput(\&quot;dout:1\&quot;, [policy]);\n    });\n    plugin.doGetLoggingPolicy(function(policy) {\n        policy.authentication_color = getColor(policy.authentication);\n        policy.cryptography_color = getColor(policy.cryptography);\n        policy.logging_color = getColor(policy.logging);\n        policy.rbac_color = getColor(policy.rbac);\n        policy.user_color = getColor(policy.user);\n        setOutput(\&quot;dout:2\&quot;, [policy]);\n    });\n    plugin.doGetEncryptionKeys(function(keys) {\n        setOutput(\&quot;dout:3\&quot;, [keys]);\n    });\n    plugin.doGetKerberosSetting(function(setting) {\n        setting.enabled_color = getColor(setting.enabled);\n        setOutput(\&quot;dout:4\&quot;, [setting]);\n    });\n}\n&quot;"/>
      <Input key="node:22/cfg:inPorts/default" value="[{&quot;portId&quot;:&quot;din:0&quot;,&quot;portType&quot;:&quot;any&quot;,&quot;portLabel&quot;:&quot;In(0)&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:37/cfg:outPorts/default" value="[{&quot;portId&quot;:&quot;dout:0&quot;,&quot;portType&quot;:&quot;json&quot;,&quot;portLabel&quot;:&quot;baseConfig&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;},{&quot;portId&quot;:&quot;dout:1&quot;,&quot;portType&quot;:&quot;any&quot;,&quot;portLabel&quot;:&quot;locale&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:39/cfg:tile/default" value="[{&quot;id&quot;:&quot;ROOT#2#LoginPolicy&quot;,&quot;path&quot;:[&quot;Default&quot;],&quot;name&quot;:&quot;LoginPolicy&quot;}]"/>
      <Input key="node:42/cfg:inPorts/default" value="[{&quot;portId&quot;:&quot;din:0&quot;,&quot;portType&quot;:&quot;event[]&quot;,&quot;portLabel&quot;:&quot;Action&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:42/cfg:outPorts/default" value="[{&quot;portId&quot;:&quot;dout:0&quot;,&quot;portType&quot;:&quot;any,json&quot;,&quot;portLabel&quot;:&quot;Notify&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:42/cfg:model/default" value="&quot;if (port == \&quot;din:0\&quot;) {\n    var action = getInput(\&quot;din:0\&quot;);\n    if (action != null &amp;&amp; action.length == 1) {\n        action = action[0];\n        switch (action.value) {\n            case \&quot;security/login\&quot;:\n                window.$(&apos;.security-frame .login-tile&apos;).css(\&quot;visibility\&quot;, \&quot;visible\&quot;);\n                window.$(&apos;.security-frame .pwd-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .log-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .encryption-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .kerberos-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                setOutput(\&quot;dout:0\&quot;, {\n                    tabName: \&quot;login\&quot;\n                });\n                break;\n            case \&quot;security/password\&quot;:\n                window.$(&apos;.security-frame .login-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .pwd-tile&apos;).css(\&quot;visibility\&quot;, \&quot;visible\&quot;);\n                window.$(&apos;.security-frame .log-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .encryption-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .kerberos-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                setOutput(\&quot;dout:0\&quot;, {\n                    tabName: \&quot;password\&quot;\n                });\n                break;\n            case \&quot;security/log\&quot;:\n                window.$(&apos;.security-frame .login-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .pwd-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .log-tile&apos;).css(\&quot;visibility\&quot;, \&quot;visible\&quot;);\n                window.$(&apos;.security-frame .encryption-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .kerberos-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                setOutput(\&quot;dout:0\&quot;, {\n                    tabName: \&quot;log\&quot;\n                });\n                break;\n            case \&quot;security/encryption\&quot;:\n                window.$(&apos;.security-frame .login-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .pwd-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .log-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .encryption-tile&apos;).css(\&quot;visibility\&quot;, \&quot;visible\&quot;);\n                window.$(&apos;.security-frame .kerberos-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                setOutput(\&quot;dout:0\&quot;, {\n                    tabName: \&quot;encryption\&quot;\n                });\n                break;\n            case \&quot;security/kerberos\&quot;:\n                window.$(&apos;.security-frame .login-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .pwd-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .log-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .encryption-tile&apos;).css(\&quot;visibility\&quot;, \&quot;hidden\&quot;);\n                window.$(&apos;.security-frame .kerberos-tile&apos;).css(\&quot;visibility\&quot;, \&quot;visible\&quot;);\n                setOutput(\&quot;dout:0\&quot;, {\n                    tabName: \&quot;kerberos\&quot;\n                });\n                break;\n        }\n    }\n}&quot;"/>
      <Input key="node:41/cfg:tile/default" value="[{&quot;id&quot;:&quot;ROOT#2#PolicyTab&quot;,&quot;path&quot;:[&quot;Default&quot;],&quot;name&quot;:&quot;PolicyTab&quot;}]"/>
      <Input key="node:44/cfg:inPorts/default" value="[{&quot;portId&quot;:&quot;din:0&quot;,&quot;portType&quot;:&quot;json&quot;,&quot;portLabel&quot;:&quot;baseConfig&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;},{&quot;portId&quot;:&quot;din:1&quot;,&quot;portType&quot;:&quot;any&quot;,&quot;portLabel&quot;:&quot;locale&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:44/cfg:model/default" value="&quot;var plugin = null;\nvar config = null;\nvar debugging = true;\n\nif ( port != null ){\n    \n    var baseConfig = getInput(\&quot;din:0\&quot;);\n    var locale = getInput(\&quot;din:1\&quot;);\n    if( baseConfig == null || baseConfig == \&quot;\&quot; ) {\n        config = \&quot;\&quot;;\n    } else {\n        config = baseConfig;   \n    }\n    setOutput(\&quot;dout:1\&quot;, {config: config, locale: locale})\n    \n    var deployModel = baseConfig.groups.filter(function(item) {\n        return item.group == \&quot;security\&quot;;\n    })[0].items.filter(function(item) {\n        return item.label == \&quot;Security\&quot;;\n    })[0];\n    setOutput(\&quot;dout:0\&quot;, {model: deployModel[\&quot;menu-model\&quot;]})\n    \n    if(debugging) console.clear();\n    \n    setPlugin(\&quot;Helper\&quot;);\n    if (baseConfig != null &amp;&amp; locale != null) {\n        window.$(&apos;.security-frame .security-title&apos;).html(plugin.localize(baseConfig.locale.frame, locale, \&quot;{i18n::Security Policy Management}\&quot;));\n    }\n\n}\n\nfunction setPlugin(piName){\n    if( piName != null ) {\n        plugin = Plugin(piName);\n        console.log( plugin );\n    }\n}&quot;"/>
      <Input key="node:44/cfg:outPorts/default" value="[{&quot;portId&quot;:&quot;dout:0&quot;,&quot;portType&quot;:&quot;any&quot;,&quot;portLabel&quot;:&quot;menu model&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;},{&quot;portId&quot;:&quot;dout:1&quot;,&quot;portType&quot;:&quot;any&quot;,&quot;portLabel&quot;:&quot;configLocale&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:41/in:0/evaluate" value="&quot;always&quot;"/>
      <Input key="node:46/cfg:tile/default" value="[{&quot;id&quot;:&quot;ROOT#2#PasswordPolicy&quot;,&quot;path&quot;:[&quot;Default&quot;],&quot;name&quot;:&quot;PasswordPolicy&quot;}]"/>
      <Input key="node:47/cfg:tile/default" value="[{&quot;id&quot;:&quot;ROOT#2#LogPolicy&quot;,&quot;path&quot;:[&quot;Default&quot;],&quot;name&quot;:&quot;LogPolicy&quot;}]"/>
      <Input key="node:48/cfg:tile/default" value="[{&quot;id&quot;:&quot;ROOT#2#EncryptionPolicy&quot;,&quot;path&quot;:[&quot;Default&quot;],&quot;name&quot;:&quot;EncryptionPolicy&quot;}]"/>
      <Input key="node:49/cfg:tile/default" value="[{&quot;id&quot;:&quot;ROOT#2#KerberosPolicy&quot;,&quot;path&quot;:[&quot;Default&quot;],&quot;name&quot;:&quot;KerberosPolicy&quot;}]"/>
      <Schema id="node:22/dout:0">
        <JSON value="{&quot;name&quot;:&quot;attemptLimits&quot;,&quot;label&quot;:&quot;Attempt Limits&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;lockDuration&quot;,&quot;label&quot;:&quot;Lock Duration&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenInactiveTimeout&quot;,&quot;label&quot;:&quot;Token Inactive Timeout&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenTotalTimeout&quot;,&quot;label&quot;:&quot;Token Total Timeout&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:23/in:0">
        <JSON value="{&quot;name&quot;:&quot;attemptLimits&quot;,&quot;label&quot;:&quot;Attempt Limits&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;lockDuration&quot;,&quot;label&quot;:&quot;Lock Duration&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenInactiveTimeout&quot;,&quot;label&quot;:&quot;Token Inactive Timeout&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenTotalTimeout&quot;,&quot;label&quot;:&quot;Token Total Timeout&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:23/out:0">
        <JSON value="{&quot;name&quot;:&quot;attemptLimits&quot;,&quot;label&quot;:&quot;Attempt Limits&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;lockDuration&quot;,&quot;label&quot;:&quot;Lock Duration&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenInactiveTimeout&quot;,&quot;label&quot;:&quot;Token Inactive Timeout&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenTotalTimeout&quot;,&quot;label&quot;:&quot;Token Total Timeout&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:26/in:0">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:26/out:0">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:29/in:0">
        <JSON value="{&quot;name&quot;:&quot;authentication&quot;,&quot;label&quot;:&quot;Authentication&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;cryptography&quot;,&quot;label&quot;:&quot;Cryptography&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;logging&quot;,&quot;label&quot;:&quot;Logging&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;rbac&quot;,&quot;label&quot;:&quot;RBAC&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;user&quot;,&quot;label&quot;:&quot;User&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:29/out:0">
        <JSON value="{&quot;name&quot;:&quot;authentication&quot;,&quot;label&quot;:&quot;Authentication&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;cryptography&quot;,&quot;label&quot;:&quot;Cryptography&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;logging&quot;,&quot;label&quot;:&quot;Logging&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;rbac&quot;,&quot;label&quot;:&quot;RBAC&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;user&quot;,&quot;label&quot;:&quot;User&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:32/in:0">
        <JSON value="{&quot;name&quot;:&quot;uiKey&quot;,&quot;label&quot;:&quot;UI Key&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;serverKey&quot;,&quot;label&quot;:&quot;Server Key&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:32/out:0">
        <JSON value="{&quot;name&quot;:&quot;uiKey&quot;,&quot;label&quot;:&quot;UI Key&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;serverKey&quot;,&quot;label&quot;:&quot;Server Key&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:35/in:0">
        <JSON value="{&quot;name&quot;:&quot;enabled&quot;,&quot;label&quot;:&quot;Enabled&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;principal&quot;,&quot;label&quot;:&quot;Principal&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;configFile&quot;,&quot;label&quot;:&quot;Config File&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;keytabFile&quot;,&quot;label&quot;:&quot;Keytab File&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:35/out:0">
        <JSON value="{&quot;name&quot;:&quot;enabled&quot;,&quot;label&quot;:&quot;Enabled&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;principal&quot;,&quot;label&quot;:&quot;Principal&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;configFile&quot;,&quot;label&quot;:&quot;Config File&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;keytabFile&quot;,&quot;label&quot;:&quot;Keytab File&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:22/dout:1">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:22/dout:2">
        <JSON value="{&quot;name&quot;:&quot;authentication&quot;,&quot;label&quot;:&quot;Authentication&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;cryptography&quot;,&quot;label&quot;:&quot;Cryptography&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;logging&quot;,&quot;label&quot;:&quot;Logging&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;rbac&quot;,&quot;label&quot;:&quot;RBAC&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;user&quot;,&quot;label&quot;:&quot;User&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:22/dout:3">
        <JSON value="{&quot;name&quot;:&quot;uiKey&quot;,&quot;label&quot;:&quot;UI Key&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;serverKey&quot;,&quot;label&quot;:&quot;Server Key&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:22/dout:4">
        <JSON value="{&quot;name&quot;:&quot;enabled&quot;,&quot;label&quot;:&quot;Enabled&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;principal&quot;,&quot;label&quot;:&quot;Principal&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;configFile&quot;,&quot;label&quot;:&quot;Config File&quot;,&quot;type&quot;:&quot;string&quot;}"/>
        <JSON value="{&quot;name&quot;:&quot;keytabFile&quot;,&quot;label&quot;:&quot;Keytab File&quot;,&quot;type&quot;:&quot;string&quot;}"/>
      </Schema>
      <Schema id="node:20/out:0">
        <JSON value="{&quot;name&quot;:&quot;type&quot;,&quot;label&quot;:&quot;Type&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:true,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;value&quot;,&quot;label&quot;:&quot;Value&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:true,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;data&quot;,&quot;label&quot;:&quot;Data&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:9/din:0">
        <JSON value="{&quot;name&quot;:&quot;type&quot;,&quot;label&quot;:&quot;Type&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:true,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;value&quot;,&quot;label&quot;:&quot;Value&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:true,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;data&quot;,&quot;label&quot;:&quot;Data&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:20/out:1">
        <JSON value="{&quot;name&quot;:&quot;type&quot;,&quot;label&quot;:&quot;Type&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:true,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;value&quot;,&quot;label&quot;:&quot;Value&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:true,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;data&quot;,&quot;label&quot;:&quot;Data&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:20/out:2">
        <JSON value="{&quot;name&quot;:&quot;type&quot;,&quot;label&quot;:&quot;Type&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:true,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;value&quot;,&quot;label&quot;:&quot;Value&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:true,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;data&quot;,&quot;label&quot;:&quot;Data&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:20/out:3">
        <JSON value="{&quot;name&quot;:&quot;type&quot;,&quot;label&quot;:&quot;Type&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:true,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;value&quot;,&quot;label&quot;:&quot;Value&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:true,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;data&quot;,&quot;label&quot;:&quot;Data&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:39/out:0">
        <JSON value="{&quot;name&quot;:&quot;attemptLimits&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Attempt Limits&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;lockDuration&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Lock Duration&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenInactiveTimeout&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Token Inactive Timeout&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenTotalTimeout&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Token Total Timeout&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:39/out:1">
        <JSON value="{&quot;name&quot;:&quot;attemptLimits&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Attempt Limits&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;lockDuration&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Lock Duration&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenInactiveTimeout&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Token Inactive Timeout&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenTotalTimeout&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Token Total Timeout&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:39/out:2">
        <JSON value="{&quot;name&quot;:&quot;attemptLimits&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Attempt Limits&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;lockDuration&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Lock Duration&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenInactiveTimeout&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Token Inactive Timeout&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenTotalTimeout&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Token Total Timeout&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:39/out:3">
        <JSON value="{&quot;name&quot;:&quot;attemptLimits&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Attempt Limits&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;lockDuration&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Lock Duration&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenInactiveTimeout&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Token Inactive Timeout&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;tokenTotalTimeout&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Token Total Timeout&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:41/out:0">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:42/din:0">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:41/out:1">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:41/out:2">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:41/out:3">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:46/out:0">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:46/out:1">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:46/out:2">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:46/out:3">
        <JSON value="{&quot;name&quot;:&quot;minLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Minimum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;maxLength&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Maximum Length&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;mandatoryChars&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Mandatory Characters&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:47/out:0">
        <JSON value="{&quot;name&quot;:&quot;authentication&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Authentication&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;cryptography&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Cryptography&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;logging&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Logging&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;rbac&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;RBAC&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;user&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;User&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:47/out:1">
        <JSON value="{&quot;name&quot;:&quot;authentication&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Authentication&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;cryptography&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Cryptography&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;logging&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Logging&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;rbac&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;RBAC&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;user&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;User&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:47/out:2">
        <JSON value="{&quot;name&quot;:&quot;authentication&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Authentication&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;cryptography&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Cryptography&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;logging&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Logging&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;rbac&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;RBAC&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;user&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;User&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:47/out:3">
        <JSON value="{&quot;name&quot;:&quot;authentication&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Authentication&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;cryptography&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Cryptography&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;logging&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Logging&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;rbac&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;RBAC&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;user&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;User&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:48/out:0">
        <JSON value="{&quot;name&quot;:&quot;uiKey&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;UI Key&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;serverKey&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Server Key&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:48/out:1">
        <JSON value="{&quot;name&quot;:&quot;uiKey&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;UI Key&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;serverKey&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Server Key&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:48/out:2">
        <JSON value="{&quot;name&quot;:&quot;uiKey&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;UI Key&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;serverKey&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Server Key&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:48/out:3">
        <JSON value="{&quot;name&quot;:&quot;uiKey&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;UI Key&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;serverKey&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Server Key&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:49/out:0">
        <JSON value="{&quot;name&quot;:&quot;enabled&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Enabled&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;principal&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Principal&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;configFile&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Config File&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;keytabFile&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Keytab File&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:49/out:1">
        <JSON value="{&quot;name&quot;:&quot;enabled&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Enabled&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;principal&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Principal&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;configFile&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Config File&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;keytabFile&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Keytab File&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:49/out:2">
        <JSON value="{&quot;name&quot;:&quot;enabled&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Enabled&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;principal&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Principal&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;configFile&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Config File&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;keytabFile&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Keytab File&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <Schema id="node:49/out:3">
        <JSON value="{&quot;name&quot;:&quot;enabled&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Enabled&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;principal&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Principal&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;configFile&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Config File&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;keytabFile&quot;,&quot;path&quot;:null,&quot;label&quot;:&quot;Keytab File&quot;,&quot;type&quot;:&quot;string&quot;,&quot;originalType&quot;:null,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false}"/>
      </Schema>
      <DynInput id="node:9">
        <Port id="din:0" type="event[]" label="Action" evaluate="always" _isArray="true"/>
      </DynInput>
      <DynInput id="node:22">
        <Port id="din:0" type="any" label="In(0)" evaluate="always"/>
      </DynInput>
      <DynInput id="node:42">
        <Port id="din:0" type="event[]" label="Action" evaluate="always" _isArray="true"/>
      </DynInput>
      <DynInput id="node:44">
        <Port id="din:0" type="json" label="baseConfig" evaluate="always"/>
        <Port id="din:1" type="any" label="locale" evaluate="always"/>
      </DynInput>
      <DynOutput id="node:9">
        <Port id="dout:0" type="any" label="Out(0)" propagate="always"/>
        <Port id="dout:1" type="json" label="Notify" propagate="always"/>
      </DynOutput>
      <DynOutput id="node:22">
        <Port id="dout:0" type="event[]" label="Login" propagate="always"/>
        <Port id="dout:1" type="event[]" label="Password" propagate="always"/>
        <Port id="dout:2" type="event[]" label="Log" propagate="always"/>
        <Port id="dout:3" type="event[]" label="Encryption" propagate="always"/>
        <Port id="dout:4" type="event[]" label="Kerberos" propagate="always"/>
      </DynOutput>
      <DynOutput id="node:37">
        <Port id="dout:0" type="json" label="baseConfig" propagate="always"/>
        <Port id="dout:1" type="any" label="locale" propagate="always"/>
      </DynOutput>
      <DynOutput id="node:42">
        <Port id="dout:0" type="any,json" label="Notify" propagate="always" _isArray="true"/>
      </DynOutput>
      <DynOutput id="node:44">
        <Port id="dout:0" type="any" label="menu model" propagate="always"/>
        <Port id="dout:1" type="any" label="configLocale" propagate="always"/>
      </DynOutput>
      <Version id="node:9" version="2"/>
      <Version id="node:20" version="1"/>
      <Version id="node:22" version="2"/>
      <Version id="node:23" version="2"/>
      <Version id="node:26" version="2"/>
      <Version id="node:29" version="2"/>
      <Version id="node:32" version="2"/>
      <Version id="node:35" version="2"/>
      <Version id="node:37" version="1"/>
      <Version id="node:39" version="1"/>
      <Version id="node:41" version="1"/>
      <Version id="node:42" version="2"/>
      <Version id="node:44" version="2"/>
      <Version id="node:46" version="1"/>
      <Version id="node:47" version="1"/>
      <Version id="node:48" version="1"/>
      <Version id="node:49" version="1"/>
      <Version type="Aggregate" version="1"/>
      <Version type="Columns" version="1"/>
      <Version type="DynPivot" version="1"/>
      <Version type="Filter" version="1"/>
      <Version type="Footer" version="1"/>
      <Version type="GeoJsonOverlay" version="1"/>
      <Version type="RestQuery" version="1"/>
      <Version type="Group" version="1"/>
      <Version type="Header" version="1"/>
      <Version type="GeoHeatMapOverlay" version="1"/>
      <Version type="Join" version="1"/>
      <Version type="LocalStore" version="2"/>
      <Version type="MenuBar" version="1"/>
      <Version type="ModelMeta" version="1"/>
      <Version type="ToolbarOverlay" version="3"/>
      <Version type="WidgetOverlay" version="1"/>
      <Version type="Pivot" version="1"/>
      <Version type="Widget" version="1"/>
      <Version type="PortIn" version="1"/>
      <Version type="PortOut" version="1"/>
      <Version type="GlobalProperty" version="3"/>
      <Version type="PutData" version="1"/>
      <Version type="ResourceMeta" version="1"/>
      <Version type="Rows" version="1"/>
      <Version type="UserScript" version="2"/>
      <Version type="Sort" version="1"/>
      <Version type="SQL" version="2"/>
      <Version type="SQLConnect" version="1"/>
      <Version type="DwrMessage" version="1"/>
      <Version type="GeoEditableOverlay" version="1"/>
      <Version type="GeoOverlay" version="2"/>
      <Version type="TextAnnotations" version="1"/>
      <Version type="Tile" version="1"/>
      <Version type="Union" version="1"/>
      <Version type="ScriptVariable" version="1"/>
    </DataFlow>
    <DashboardPlugins>
      <DashboardPlugin uri="/app/dbp/space/VIA Admin Modules/dbpm/Admin - Plugin" alias=""/>
      <DashboardPlugin uri="/app/dbp/space/VIA Admin Modules/dbpm/Admin - Security Setting" alias=""/>
      <DashboardPlugin uri="/app/dbp/space/VIA Admin Modules/dbpm/Admin - Common Helper" alias="Helper"/>
    </DashboardPlugins>
  </ModelInfo>
</AnalyticsExplorerView>
